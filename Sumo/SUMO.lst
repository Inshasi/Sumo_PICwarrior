;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 1/20/2024 6:41:24 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x28FD      	GOTO       253
_PWM_Duty:
;SUMO.c,145 :: 		void PWM_Duty(unsigned int duty1, unsigned int duty2) {
;SUMO.c,146 :: 		CCPR1L = duty1 >> 2;
0x0003	0x1283      	BCF        STATUS, 5
0x0004	0x1303      	BCF        STATUS, 6
0x0005	0x082D      	MOVF       FARG_PWM_Duty_duty1, 0
0x0006	0x00F0      	MOVWF      R0
0x0007	0x082E      	MOVF       FARG_PWM_Duty_duty1+1, 0
0x0008	0x00F1      	MOVWF      R0+1
0x0009	0x0CF1      	RRF        R0+1, 1
0x000A	0x0CF0      	RRF        R0, 1
0x000B	0x13F1      	BCF        R0+1, 7
0x000C	0x0CF1      	RRF        R0+1, 1
0x000D	0x0CF0      	RRF        R0, 1
0x000E	0x13F1      	BCF        R0+1, 7
0x000F	0x0870      	MOVF       R0, 0
0x0010	0x0095      	MOVWF      CCPR1L
;SUMO.c,147 :: 		CCP1CON &= 0b11001111;
0x0011	0x30CF      	MOVLW      207
0x0012	0x0597      	ANDWF      CCP1CON, 1
;SUMO.c,148 :: 		CCP1CON |= (0b00000011 & duty1) << 4;
0x0013	0x3003      	MOVLW      3
0x0014	0x052D      	ANDWF      FARG_PWM_Duty_duty1, 0
0x0015	0x00F2      	MOVWF      R2
0x0016	0x0872      	MOVF       R2, 0
0x0017	0x00F0      	MOVWF      R0
0x0018	0x0DF0      	RLF        R0, 1
0x0019	0x1070      	BCF        R0, 0
0x001A	0x0DF0      	RLF        R0, 1
0x001B	0x1070      	BCF        R0, 0
0x001C	0x0DF0      	RLF        R0, 1
0x001D	0x1070      	BCF        R0, 0
0x001E	0x0DF0      	RLF        R0, 1
0x001F	0x1070      	BCF        R0, 0
0x0020	0x0870      	MOVF       R0, 0
0x0021	0x0497      	IORWF      CCP1CON, 1
;SUMO.c,150 :: 		CCPR2L = duty2 >> 2;
0x0022	0x082F      	MOVF       FARG_PWM_Duty_duty2, 0
0x0023	0x00F0      	MOVWF      R0
0x0024	0x0830      	MOVF       FARG_PWM_Duty_duty2+1, 0
0x0025	0x00F1      	MOVWF      R0+1
0x0026	0x0CF1      	RRF        R0+1, 1
0x0027	0x0CF0      	RRF        R0, 1
0x0028	0x13F1      	BCF        R0+1, 7
0x0029	0x0CF1      	RRF        R0+1, 1
0x002A	0x0CF0      	RRF        R0, 1
0x002B	0x13F1      	BCF        R0+1, 7
0x002C	0x0870      	MOVF       R0, 0
0x002D	0x009B      	MOVWF      CCPR2L
;SUMO.c,151 :: 		CCP2CON &= 0b11001111;
0x002E	0x30CF      	MOVLW      207
0x002F	0x059D      	ANDWF      CCP2CON, 1
;SUMO.c,152 :: 		CCP2CON |= (0b00000011 & duty2) << 4;
0x0030	0x3003      	MOVLW      3
0x0031	0x052F      	ANDWF      FARG_PWM_Duty_duty2, 0
0x0032	0x00F2      	MOVWF      R2
0x0033	0x0872      	MOVF       R2, 0
0x0034	0x00F0      	MOVWF      R0
0x0035	0x0DF0      	RLF        R0, 1
0x0036	0x1070      	BCF        R0, 0
0x0037	0x0DF0      	RLF        R0, 1
0x0038	0x1070      	BCF        R0, 0
0x0039	0x0DF0      	RLF        R0, 1
0x003A	0x1070      	BCF        R0, 0
0x003B	0x0DF0      	RLF        R0, 1
0x003C	0x1070      	BCF        R0, 0
0x003D	0x0870      	MOVF       R0, 0
0x003E	0x049D      	IORWF      CCP2CON, 1
;SUMO.c,154 :: 		CCP1CON |= 0b00000001;
0x003F	0x1417      	BSF        CCP1CON, 0
;SUMO.c,155 :: 		CCP2CON |= 0b00000001;
0x0040	0x141D      	BSF        CCP2CON, 0
;SUMO.c,156 :: 		}
L_end_PWM_Duty:
0x0041	0x0008      	RETURN
; end of _PWM_Duty
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0042	0x1283      	BCF        STATUS, 5
0x0043	0x1303      	BCF        STATUS, 6
0x0044	0x0828      	MOVF       ___DoICPAddr+1, 0
0x0045	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0046	0x0827      	MOVF       ___DoICPAddr, 0
0x0047	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0048	0x0008      	RETURN
; end of _____DoICP
_UART1_Init:
;__Lib_UART_c67.c,2 :: 		
;__Lib_UART_c67.c,5 :: 		
0x0049	0x1683      	BSF        STATUS, 5
0x004A	0x1303      	BCF        STATUS, 6
0x004B	0x1698      	BSF        TXSTA, 5
;__Lib_UART_c67.c,6 :: 		
0x004C	0x3090      	MOVLW      144
0x004D	0x1283      	BCF        STATUS, 5
0x004E	0x0098      	MOVWF      RCSTA
;__Lib_UART_c67.c,7 :: 		
0x004F	0x1683      	BSF        STATUS, 5
0x0050	0x1787      	BSF        TRISC7_bit, BitPos(TRISC7_bit+0)
;__Lib_UART_c67.c,8 :: 		
0x0051	0x1307      	BCF        TRISC6_bit, BitPos(TRISC6_bit+0)
;__Lib_UART_c67.c,10 :: 		
L_UART1_Init0:
0x0052	0x1283      	BCF        STATUS, 5
0x0053	0x1E8C      	BTFSS      PIR1, 5
0x0054	0x2858      	GOTO       L_UART1_Init1
;__Lib_UART_c67.c,11 :: 		
0x0055	0x081A      	MOVF       RCREG, 0
0x0056	0x00F0      	MOVWF      R0
0x0057	0x2852      	GOTO       L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67.c,12 :: 		
L_end_UART1_Init:
0x0058	0x0008      	RETURN
; end of _UART1_Init
_ourDelay:
;SUMO.c,188 :: 		void ourDelay(unsigned int microSeconds) {
;SUMO.c,189 :: 		counter = 0;
0x0059	0x1283      	BCF        STATUS, 5
0x005A	0x1303      	BCF        STATUS, 6
0x005B	0x01A5      	CLRF       _counter
0x005C	0x01A6      	CLRF       _counter+1
;SUMO.c,190 :: 		while (counter < microSeconds){counter++;}
L_ourDelay65:
0x005D	0x082E      	MOVF       FARG_ourDelay_microSeconds+1, 0
0x005E	0x0226      	SUBWF      _counter+1, 0
0x005F	0x1D03      	BTFSS      STATUS, 2
0x0060	0x2863      	GOTO       L__ourDelay94
0x0061	0x082D      	MOVF       FARG_ourDelay_microSeconds, 0
0x0062	0x0225      	SUBWF      _counter, 0
L__ourDelay94:
0x0063	0x1803      	BTFSC      STATUS, 0
0x0064	0x2869      	GOTO       L_ourDelay66
0x0065	0x0AA5      	INCF       _counter, 1
0x0066	0x1903      	BTFSC      STATUS, 2
0x0067	0x0AA6      	INCF       _counter+1, 1
0x0068	0x285D      	GOTO       L_ourDelay65
L_ourDelay66:
;SUMO.c,191 :: 		}
L_end_ourDelay:
0x0069	0x0008      	RETURN
; end of _ourDelay
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x006A	0x2042      	CALL       _____DoICP
0x006B	0x118A      	BCF        PCLATH, 3
0x006C	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x006D	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x006E	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x006F	0x0AA7      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0070	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0071	0x0AA8      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0072	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0073	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0074	0x286A      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0075	0x0008      	RETURN
; end of ___CC2DW
_Bluetooth_Init:
;SUMO.c,183 :: 		void Bluetooth_Init(const long baud_rate) {
;SUMO.c,184 :: 		UART1_Init(9600);
0x0076	0x3040      	MOVLW      64
0x0077	0x1683      	BSF        STATUS, 5
0x0078	0x1303      	BCF        STATUS, 6
0x0079	0x0099      	MOVWF      SPBRG
0x007A	0x1518      	BSF        TXSTA, 2
0x007B	0x2049      	CALL       _UART1_Init
;SUMO.c,185 :: 		ourDelay(100);
0x007C	0x3064      	MOVLW      100
0x007D	0x00AD      	MOVWF      FARG_ourDelay_microSeconds
0x007E	0x3000      	MOVLW      0
0x007F	0x00AE      	MOVWF      FARG_ourDelay_microSeconds+1
0x0080	0x2059      	CALL       _ourDelay
;SUMO.c,186 :: 		}
L_end_Bluetooth_Init:
0x0081	0x0008      	RETURN
; end of _Bluetooth_Init
_ADC_Read_0:
;SUMO.c,199 :: 		unsigned int ADC_Read_0(void) {
;SUMO.c,200 :: 		ADCON0 = 0x41;
0x0082	0x3041      	MOVLW      65
0x0083	0x1283      	BCF        STATUS, 5
0x0084	0x1303      	BCF        STATUS, 6
0x0085	0x009F      	MOVWF      ADCON0
;SUMO.c,201 :: 		ADCON0 = ADCON0 | 0x04;
0x0086	0x151F      	BSF        ADCON0, 2
;SUMO.c,202 :: 		while (ADCON0 & 0x04);
L_ADC_Read_067:
0x0087	0x1D1F      	BTFSS      ADCON0, 2
0x0088	0x288A      	GOTO       L_ADC_Read_068
0x0089	0x2887      	GOTO       L_ADC_Read_067
L_ADC_Read_068:
;SUMO.c,203 :: 		return ((ADRESH << 8) | ADRESL);
0x008A	0x081E      	MOVF       ADRESH, 0
0x008B	0x00F1      	MOVWF      R0+1
0x008C	0x01F0      	CLRF       R0
0x008D	0x1683      	BSF        STATUS, 5
0x008E	0x081E      	MOVF       ADRESL, 0
0x008F	0x04F0      	IORWF      R0, 1
0x0090	0x3000      	MOVLW      0
0x0091	0x04F1      	IORWF      R0+1, 1
;SUMO.c,204 :: 		}
L_end_ADC_Read_0:
0x0092	0x0008      	RETURN
; end of _ADC_Read_0
_ADC_Init:
;SUMO.c,193 :: 		void ADC_Init() {
;SUMO.c,194 :: 		ADCON1 = 0xC0;
0x0093	0x30C0      	MOVLW      192
0x0094	0x1683      	BSF        STATUS, 5
0x0095	0x1303      	BCF        STATUS, 6
0x0096	0x009F      	MOVWF      ADCON1
;SUMO.c,195 :: 		ADCON0 = 0x41;
0x0097	0x3041      	MOVLW      65
0x0098	0x1283      	BCF        STATUS, 5
0x0099	0x009F      	MOVWF      ADCON0
;SUMO.c,197 :: 		}
L_end_ADC_Init:
0x009A	0x0008      	RETURN
; end of _ADC_Init
_PWM_Init:
;SUMO.c,135 :: 		void PWM_Init() {
;SUMO.c,136 :: 		PR2 = 255;
0x009B	0x30FF      	MOVLW      255
0x009C	0x1683      	BSF        STATUS, 5
0x009D	0x1303      	BCF        STATUS, 6
0x009E	0x0092      	MOVWF      PR2
;SUMO.c,137 :: 		CCP1CON = 0b00001100;
0x009F	0x300C      	MOVLW      12
0x00A0	0x1283      	BCF        STATUS, 5
0x00A1	0x0097      	MOVWF      CCP1CON
;SUMO.c,138 :: 		CCP2CON = 0b00001100;
0x00A2	0x300C      	MOVLW      12
0x00A3	0x009D      	MOVWF      CCP2CON
;SUMO.c,139 :: 		CCPR1L = 0;
0x00A4	0x0195      	CLRF       CCPR1L
;SUMO.c,140 :: 		CCPR2L = 0;
0x00A5	0x019B      	CLRF       CCPR2L
;SUMO.c,141 :: 		TMR2 = 0;
0x00A6	0x0191      	CLRF       TMR2
;SUMO.c,142 :: 		T2CON = 0b00000100;
0x00A7	0x3004      	MOVLW      4
0x00A8	0x0092      	MOVWF      T2CON
;SUMO.c,143 :: 		}
L_end_PWM_Init:
0x00A9	0x0008      	RETURN
; end of _PWM_Init
_moveForward:
;SUMO.c,158 :: 		void moveForward(unsigned int speed1, unsigned int speed2) {
;SUMO.c,159 :: 		PWM_Duty(speed1, speed2);
0x00AA	0x1283      	BCF        STATUS, 5
0x00AB	0x1303      	BCF        STATUS, 6
0x00AC	0x0829      	MOVF       FARG_moveForward_speed1, 0
0x00AD	0x00AD      	MOVWF      FARG_PWM_Duty_duty1
0x00AE	0x082A      	MOVF       FARG_moveForward_speed1+1, 0
0x00AF	0x00AE      	MOVWF      FARG_PWM_Duty_duty1+1
0x00B0	0x082B      	MOVF       FARG_moveForward_speed2, 0
0x00B1	0x00AF      	MOVWF      FARG_PWM_Duty_duty2
0x00B2	0x082C      	MOVF       FARG_moveForward_speed2+1, 0
0x00B3	0x00B0      	MOVWF      FARG_PWM_Duty_duty2+1
0x00B4	0x2003      	CALL       _PWM_Duty
;SUMO.c,160 :: 		PORTD = 0b00000101;
0x00B5	0x3005      	MOVLW      5
0x00B6	0x0088      	MOVWF      PORTD
;SUMO.c,161 :: 		}
L_end_moveForward:
0x00B7	0x0008      	RETURN
; end of _moveForward
_moveBackward:
;SUMO.c,163 :: 		void moveBackward(unsigned int speed1, unsigned int speed2) {
;SUMO.c,164 :: 		PWM_Duty(speed1, speed2);
0x00B8	0x1283      	BCF        STATUS, 5
0x00B9	0x1303      	BCF        STATUS, 6
0x00BA	0x0829      	MOVF       FARG_moveBackward_speed1, 0
0x00BB	0x00AD      	MOVWF      FARG_PWM_Duty_duty1
0x00BC	0x082A      	MOVF       FARG_moveBackward_speed1+1, 0
0x00BD	0x00AE      	MOVWF      FARG_PWM_Duty_duty1+1
0x00BE	0x082B      	MOVF       FARG_moveBackward_speed2, 0
0x00BF	0x00AF      	MOVWF      FARG_PWM_Duty_duty2
0x00C0	0x082C      	MOVF       FARG_moveBackward_speed2+1, 0
0x00C1	0x00B0      	MOVWF      FARG_PWM_Duty_duty2+1
0x00C2	0x2003      	CALL       _PWM_Duty
;SUMO.c,165 :: 		PORTD = 0b00001010;
0x00C3	0x300A      	MOVLW      10
0x00C4	0x0088      	MOVWF      PORTD
;SUMO.c,166 :: 		}
L_end_moveBackward:
0x00C5	0x0008      	RETURN
; end of _moveBackward
_moveRight:
;SUMO.c,168 :: 		void moveRight(unsigned int speed1, unsigned int speed2) {
;SUMO.c,169 :: 		PWM_Duty(speed1, speed2);
0x00C6	0x1283      	BCF        STATUS, 5
0x00C7	0x1303      	BCF        STATUS, 6
0x00C8	0x0829      	MOVF       FARG_moveRight_speed1, 0
0x00C9	0x00AD      	MOVWF      FARG_PWM_Duty_duty1
0x00CA	0x082A      	MOVF       FARG_moveRight_speed1+1, 0
0x00CB	0x00AE      	MOVWF      FARG_PWM_Duty_duty1+1
0x00CC	0x082B      	MOVF       FARG_moveRight_speed2, 0
0x00CD	0x00AF      	MOVWF      FARG_PWM_Duty_duty2
0x00CE	0x082C      	MOVF       FARG_moveRight_speed2+1, 0
0x00CF	0x00B0      	MOVWF      FARG_PWM_Duty_duty2+1
0x00D0	0x2003      	CALL       _PWM_Duty
;SUMO.c,170 :: 		PORTD = 0b00001001;
0x00D1	0x3009      	MOVLW      9
0x00D2	0x0088      	MOVWF      PORTD
;SUMO.c,171 :: 		}
L_end_moveRight:
0x00D3	0x0008      	RETURN
; end of _moveRight
_UART1_Data_Ready:
;__Lib_UART_c67.c,16 :: 		
;__Lib_UART_c67.c,17 :: 		
0x00D4	0x3000      	MOVLW      0
0x00D5	0x1283      	BCF        STATUS, 5
0x00D6	0x1303      	BCF        STATUS, 6
0x00D7	0x1A8C      	BTFSC      PIR1, 5
0x00D8	0x3001      	MOVLW      1
0x00D9	0x00F0      	MOVWF      R0
;__Lib_UART_c67.c,18 :: 		
L_end_UART1_Data_Ready:
0x00DA	0x0008      	RETURN
; end of _UART1_Data_Ready
_Park:
;SUMO.c,178 :: 		void Park() {
;SUMO.c,179 :: 		PWM_Duty(0,0);
0x00DB	0x1283      	BCF        STATUS, 5
0x00DC	0x1303      	BCF        STATUS, 6
0x00DD	0x01AD      	CLRF       FARG_PWM_Duty_duty1
0x00DE	0x01AE      	CLRF       FARG_PWM_Duty_duty1+1
0x00DF	0x01AF      	CLRF       FARG_PWM_Duty_duty2
0x00E0	0x01B0      	CLRF       FARG_PWM_Duty_duty2+1
0x00E1	0x2003      	CALL       _PWM_Duty
;SUMO.c,180 :: 		PORTD = 0b00000000;
0x00E2	0x0188      	CLRF       PORTD
;SUMO.c,181 :: 		}
L_end_Park:
0x00E3	0x0008      	RETURN
; end of _Park
_moveLeft:
;SUMO.c,173 :: 		void moveLeft(unsigned int speed1, unsigned int speed2) {
;SUMO.c,174 :: 		PWM_Duty(speed1, speed2);
0x00E4	0x1283      	BCF        STATUS, 5
0x00E5	0x1303      	BCF        STATUS, 6
0x00E6	0x0829      	MOVF       FARG_moveLeft_speed1, 0
0x00E7	0x00AD      	MOVWF      FARG_PWM_Duty_duty1
0x00E8	0x082A      	MOVF       FARG_moveLeft_speed1+1, 0
0x00E9	0x00AE      	MOVWF      FARG_PWM_Duty_duty1+1
0x00EA	0x082B      	MOVF       FARG_moveLeft_speed2, 0
0x00EB	0x00AF      	MOVWF      FARG_PWM_Duty_duty2
0x00EC	0x082C      	MOVF       FARG_moveLeft_speed2+1, 0
0x00ED	0x00B0      	MOVWF      FARG_PWM_Duty_duty2+1
0x00EE	0x2003      	CALL       _PWM_Duty
;SUMO.c,175 :: 		PORTD = 0b00000110;
0x00EF	0x3006      	MOVLW      6
0x00F0	0x0088      	MOVWF      PORTD
;SUMO.c,176 :: 		}
L_end_moveLeft:
0x00F1	0x0008      	RETURN
; end of _moveLeft
_UART1_Read:
;__Lib_UART_c67.c,21 :: 		
;__Lib_UART_c67.c,24 :: 		
0x00F2	0x1283      	BCF        STATUS, 5
0x00F3	0x1303      	BCF        STATUS, 6
0x00F4	0x081A      	MOVF       RCREG, 0
0x00F5	0x00F1      	MOVWF      R1
;__Lib_UART_c67.c,25 :: 		
0x00F6	0x1C98      	BTFSS      RCSTA, 1
0x00F7	0x28FA      	GOTO       L_UART1_Read2
;__Lib_UART_c67.c,26 :: 		
0x00F8	0x1218      	BCF        RCSTA, 4
;__Lib_UART_c67.c,27 :: 		
0x00F9	0x1618      	BSF        RCSTA, 4
;__Lib_UART_c67.c,28 :: 		
L_UART1_Read2:
;__Lib_UART_c67.c,29 :: 		
0x00FA	0x0871      	MOVF       R1, 0
0x00FB	0x00F0      	MOVWF      R0
;__Lib_UART_c67.c,30 :: 		
L_end_UART1_Read:
0x00FC	0x0008      	RETURN
; end of _UART1_Read
_main:
0x00FD	0x3058      	MOVLW      88
0x00FE	0x1283      	BCF        STATUS, 5
0x00FF	0x1303      	BCF        STATUS, 6
0x0100	0x00A0      	MOVWF      _bluetoothSpeed
0x0101	0x3002      	MOVLW      2
0x0102	0x00A1      	MOVWF      33
;SUMO.c,17 :: 		void main() {
;SUMO.c,18 :: 		TRISD = 0x00;
0x0103	0x1683      	BSF        STATUS, 5
0x0104	0x0188      	CLRF       TRISD
;SUMO.c,19 :: 		TRISA = 0xFF;
0x0105	0x30FF      	MOVLW      255
0x0106	0x0085      	MOVWF      TRISA
;SUMO.c,20 :: 		TRISB = 0xFF;
0x0107	0x30FF      	MOVLW      255
0x0108	0x0086      	MOVWF      TRISB
;SUMO.c,21 :: 		TRISC = 0b10001000;
0x0109	0x3088      	MOVLW      136
0x010A	0x0087      	MOVWF      TRISC
;SUMO.c,22 :: 		PORTD = 0x00;
0x010B	0x1283      	BCF        STATUS, 5
0x010C	0x0188      	CLRF       PORTD
;SUMO.c,23 :: 		PWM_Init();
0x010D	0x209B      	CALL       _PWM_Init
;SUMO.c,24 :: 		Bluetooth_Init(9600);
0x010E	0x3080      	MOVLW      128
0x010F	0x00A9      	MOVWF      FARG_Bluetooth_Init_baud_rate
0x0110	0x3025      	MOVLW      37
0x0111	0x00AA      	MOVWF      FARG_Bluetooth_Init_baud_rate+1
0x0112	0x01AB      	CLRF       FARG_Bluetooth_Init_baud_rate+2
0x0113	0x01AC      	CLRF       FARG_Bluetooth_Init_baud_rate+3
0x0114	0x2076      	CALL       _Bluetooth_Init
;SUMO.c,25 :: 		ADC_Init();
0x0115	0x2093      	CALL       _ADC_Init
;SUMO.c,26 :: 		Adc_value = ADC_Read_0();
0x0116	0x2082      	CALL       _ADC_Read_0
0x0117	0x0870      	MOVF       R0, 0
0x0118	0x1283      	BCF        STATUS, 5
0x0119	0x00A3      	MOVWF      _Adc_value
0x011A	0x0871      	MOVF       R0+1, 0
0x011B	0x00A4      	MOVWF      _Adc_value+1
;SUMO.c,27 :: 		ourDelay(10);
0x011C	0x300A      	MOVLW      10
0x011D	0x00AD      	MOVWF      FARG_ourDelay_microSeconds
0x011E	0x3000      	MOVLW      0
0x011F	0x00AE      	MOVWF      FARG_ourDelay_microSeconds+1
0x0120	0x2059      	CALL       _ourDelay
;SUMO.c,28 :: 		if(Adc_value < 750) {Adc_value = 800;}
0x0121	0x3002      	MOVLW      2
0x0122	0x0224      	SUBWF      _Adc_value+1, 0
0x0123	0x1D03      	BTFSS      STATUS, 2
0x0124	0x2927      	GOTO       L__main80
0x0125	0x30EE      	MOVLW      238
0x0126	0x0223      	SUBWF      _Adc_value, 0
L__main80:
0x0127	0x1803      	BTFSC      STATUS, 0
0x0128	0x292D      	GOTO       L_main0
0x0129	0x3020      	MOVLW      32
0x012A	0x00A3      	MOVWF      _Adc_value
0x012B	0x3003      	MOVLW      3
0x012C	0x00A4      	MOVWF      _Adc_value+1
L_main0:
;SUMO.c,29 :: 		while(1){
L_main1:
;SUMO.c,30 :: 		while (!(PORTC & 0b00001000)) {
L_main3:
0x012D	0x1987      	BTFSC      PORTC, 3
0x012E	0x2A3A      	GOTO       L_main4
;SUMO.c,31 :: 		while ((PORTB & 0b00100000) && (PORTB & 0b00010000) && !(PORTC & 0b00001000)) {
L_main5:
0x012F	0x1E86      	BTFSS      PORTB, 5
0x0130	0x29EC      	GOTO       L_main6
0x0131	0x1E06      	BTFSS      PORTB, 4
0x0132	0x29EC      	GOTO       L_main6
0x0133	0x1987      	BTFSC      PORTC, 3
0x0134	0x29EC      	GOTO       L_main6
L__main78:
;SUMO.c,32 :: 		while ((PORTB & 0b00000100) && (PORTB & 0b00000001) && (PORTB & 0b00000010) && (PORTB & 0b00100000) && (PORTB & 0b00010000) && !(PORTC & 0b00001000)) {
L_main9:
0x0135	0x1D06      	BTFSS      PORTB, 2
0x0136	0x2962      	GOTO       L_main10
0x0137	0x1C06      	BTFSS      PORTB, 0
0x0138	0x2962      	GOTO       L_main10
0x0139	0x1C86      	BTFSS      PORTB, 1
0x013A	0x2962      	GOTO       L_main10
0x013B	0x1E86      	BTFSS      PORTB, 5
0x013C	0x2962      	GOTO       L_main10
0x013D	0x1E06      	BTFSS      PORTB, 4
0x013E	0x2962      	GOTO       L_main10
0x013F	0x1987      	BTFSC      PORTC, 3
0x0140	0x2962      	GOTO       L_main10
L__main77:
;SUMO.c,33 :: 		moveForward(750,750);
0x0141	0x30EE      	MOVLW      238
0x0142	0x00A9      	MOVWF      FARG_moveForward_speed1
0x0143	0x3002      	MOVLW      2
0x0144	0x00AA      	MOVWF      FARG_moveForward_speed1+1
0x0145	0x30EE      	MOVLW      238
0x0146	0x00AB      	MOVWF      FARG_moveForward_speed2
0x0147	0x3002      	MOVLW      2
0x0148	0x00AC      	MOVWF      FARG_moveForward_speed2+1
0x0149	0x20AA      	CALL       _moveForward
;SUMO.c,34 :: 		Adc_value = ADC_Read_0();
0x014A	0x2082      	CALL       _ADC_Read_0
0x014B	0x0870      	MOVF       R0, 0
0x014C	0x1283      	BCF        STATUS, 5
0x014D	0x00A3      	MOVWF      _Adc_value
0x014E	0x0871      	MOVF       R0+1, 0
0x014F	0x00A4      	MOVWF      _Adc_value+1
;SUMO.c,35 :: 		ourDelay(10);
0x0150	0x300A      	MOVLW      10
0x0151	0x00AD      	MOVWF      FARG_ourDelay_microSeconds
0x0152	0x3000      	MOVLW      0
0x0153	0x00AE      	MOVWF      FARG_ourDelay_microSeconds+1
0x0154	0x2059      	CALL       _ourDelay
;SUMO.c,36 :: 		if(Adc_value < 750) {Adc_value = 800;}
0x0155	0x3002      	MOVLW      2
0x0156	0x0224      	SUBWF      _Adc_value+1, 0
0x0157	0x1D03      	BTFSS      STATUS, 2
0x0158	0x295B      	GOTO       L__main81
0x0159	0x30EE      	MOVLW      238
0x015A	0x0223      	SUBWF      _Adc_value, 0
L__main81:
0x015B	0x1803      	BTFSC      STATUS, 0
0x015C	0x2961      	GOTO       L_main13
0x015D	0x3020      	MOVLW      32
0x015E	0x00A3      	MOVWF      _Adc_value
0x015F	0x3003      	MOVLW      3
0x0160	0x00A4      	MOVWF      _Adc_value+1
L_main13:
;SUMO.c,37 :: 		}
0x0161	0x2935      	GOTO       L_main9
L_main10:
;SUMO.c,39 :: 		while ((!(PORTB & 0b00000001) || (!(PORTB & 0b00000010) && !(PORTB & 0b00000100))) && (PORTB & 0b00100000) && (PORTB & 0b00010000) && !(PORTC & 0b00001000)) {
L_main14:
0x0162	0x1C06      	BTFSS      PORTB, 0
0x0163	0x296A      	GOTO       L__main75
0x0164	0x1886      	BTFSC      PORTB, 1
0x0165	0x2969      	GOTO       L__main76
0x0166	0x1906      	BTFSC      PORTB, 2
0x0167	0x2969      	GOTO       L__main76
0x0168	0x296A      	GOTO       L__main75
L__main76:
0x0169	0x2991      	GOTO       L_main15
L__main75:
0x016A	0x1E86      	BTFSS      PORTB, 5
0x016B	0x2991      	GOTO       L_main15
0x016C	0x1E06      	BTFSS      PORTB, 4
0x016D	0x2991      	GOTO       L_main15
0x016E	0x1987      	BTFSC      PORTC, 3
0x016F	0x2991      	GOTO       L_main15
L__main74:
;SUMO.c,40 :: 		moveForward(Adc_value,Adc_value);
0x0170	0x0823      	MOVF       _Adc_value, 0
0x0171	0x00A9      	MOVWF      FARG_moveForward_speed1
0x0172	0x0824      	MOVF       _Adc_value+1, 0
0x0173	0x00AA      	MOVWF      FARG_moveForward_speed1+1
0x0174	0x0823      	MOVF       _Adc_value, 0
0x0175	0x00AB      	MOVWF      FARG_moveForward_speed2
0x0176	0x0824      	MOVF       _Adc_value+1, 0
0x0177	0x00AC      	MOVWF      FARG_moveForward_speed2+1
0x0178	0x20AA      	CALL       _moveForward
;SUMO.c,41 :: 		Adc_value = ADC_Read_0();
0x0179	0x2082      	CALL       _ADC_Read_0
0x017A	0x0870      	MOVF       R0, 0
0x017B	0x1283      	BCF        STATUS, 5
0x017C	0x00A3      	MOVWF      _Adc_value
0x017D	0x0871      	MOVF       R0+1, 0
0x017E	0x00A4      	MOVWF      _Adc_value+1
;SUMO.c,42 :: 		ourDelay(10);
0x017F	0x300A      	MOVLW      10
0x0180	0x00AD      	MOVWF      FARG_ourDelay_microSeconds
0x0181	0x3000      	MOVLW      0
0x0182	0x00AE      	MOVWF      FARG_ourDelay_microSeconds+1
0x0183	0x2059      	CALL       _ourDelay
;SUMO.c,43 :: 		if(Adc_value < 750) {Adc_value = 800;}
0x0184	0x3002      	MOVLW      2
0x0185	0x0224      	SUBWF      _Adc_value+1, 0
0x0186	0x1D03      	BTFSS      STATUS, 2
0x0187	0x298A      	GOTO       L__main82
0x0188	0x30EE      	MOVLW      238
0x0189	0x0223      	SUBWF      _Adc_value, 0
L__main82:
0x018A	0x1803      	BTFSC      STATUS, 0
0x018B	0x2990      	GOTO       L_main22
0x018C	0x3020      	MOVLW      32
0x018D	0x00A3      	MOVWF      _Adc_value
0x018E	0x3003      	MOVLW      3
0x018F	0x00A4      	MOVWF      _Adc_value+1
L_main22:
;SUMO.c,44 :: 		}
0x0190	0x2962      	GOTO       L_main14
L_main15:
;SUMO.c,46 :: 		while (!(PORTB & 0b00000100) && (PORTB & 0b00000001) && (PORTB & 0b00000010) && (PORTB & 0b00100000) && (PORTB & 0b00010000) && !(PORTC & 0b00001000)) {
L_main23:
0x0191	0x1906      	BTFSC      PORTB, 2
0x0192	0x29BE      	GOTO       L_main24
0x0193	0x1C06      	BTFSS      PORTB, 0
0x0194	0x29BE      	GOTO       L_main24
0x0195	0x1C86      	BTFSS      PORTB, 1
0x0196	0x29BE      	GOTO       L_main24
0x0197	0x1E86      	BTFSS      PORTB, 5
0x0198	0x29BE      	GOTO       L_main24
0x0199	0x1E06      	BTFSS      PORTB, 4
0x019A	0x29BE      	GOTO       L_main24
0x019B	0x1987      	BTFSC      PORTC, 3
0x019C	0x29BE      	GOTO       L_main24
L__main73:
;SUMO.c,47 :: 		moveLeft(Adc_value,Adc_value);
0x019D	0x0823      	MOVF       _Adc_value, 0
0x019E	0x00A9      	MOVWF      FARG_moveLeft_speed1
0x019F	0x0824      	MOVF       _Adc_value+1, 0
0x01A0	0x00AA      	MOVWF      FARG_moveLeft_speed1+1
0x01A1	0x0823      	MOVF       _Adc_value, 0
0x01A2	0x00AB      	MOVWF      FARG_moveLeft_speed2
0x01A3	0x0824      	MOVF       _Adc_value+1, 0
0x01A4	0x00AC      	MOVWF      FARG_moveLeft_speed2+1
0x01A5	0x20E4      	CALL       _moveLeft
;SUMO.c,48 :: 		Adc_value = ADC_Read_0();
0x01A6	0x2082      	CALL       _ADC_Read_0
0x01A7	0x0870      	MOVF       R0, 0
0x01A8	0x1283      	BCF        STATUS, 5
0x01A9	0x00A3      	MOVWF      _Adc_value
0x01AA	0x0871      	MOVF       R0+1, 0
0x01AB	0x00A4      	MOVWF      _Adc_value+1
;SUMO.c,49 :: 		ourDelay(10);
0x01AC	0x300A      	MOVLW      10
0x01AD	0x00AD      	MOVWF      FARG_ourDelay_microSeconds
0x01AE	0x3000      	MOVLW      0
0x01AF	0x00AE      	MOVWF      FARG_ourDelay_microSeconds+1
0x01B0	0x2059      	CALL       _ourDelay
;SUMO.c,50 :: 		if(Adc_value < 750) {Adc_value = 800;}
0x01B1	0x3002      	MOVLW      2
0x01B2	0x0224      	SUBWF      _Adc_value+1, 0
0x01B3	0x1D03      	BTFSS      STATUS, 2
0x01B4	0x29B7      	GOTO       L__main83
0x01B5	0x30EE      	MOVLW      238
0x01B6	0x0223      	SUBWF      _Adc_value, 0
L__main83:
0x01B7	0x1803      	BTFSC      STATUS, 0
0x01B8	0x29BD      	GOTO       L_main27
0x01B9	0x3020      	MOVLW      32
0x01BA	0x00A3      	MOVWF      _Adc_value
0x01BB	0x3003      	MOVLW      3
0x01BC	0x00A4      	MOVWF      _Adc_value+1
L_main27:
;SUMO.c,51 :: 		}
0x01BD	0x2991      	GOTO       L_main23
L_main24:
;SUMO.c,53 :: 		while (!(PORTB & 0b00000010) && (PORTB & 0b00000001) && (PORTB & 0b00000100) && (PORTB & 0b00100000) && (PORTB & 0b00010000) && !(PORTC & 0b00001000)) {
L_main28:
0x01BE	0x1886      	BTFSC      PORTB, 1
0x01BF	0x29EB      	GOTO       L_main29
0x01C0	0x1C06      	BTFSS      PORTB, 0
0x01C1	0x29EB      	GOTO       L_main29
0x01C2	0x1D06      	BTFSS      PORTB, 2
0x01C3	0x29EB      	GOTO       L_main29
0x01C4	0x1E86      	BTFSS      PORTB, 5
0x01C5	0x29EB      	GOTO       L_main29
0x01C6	0x1E06      	BTFSS      PORTB, 4
0x01C7	0x29EB      	GOTO       L_main29
0x01C8	0x1987      	BTFSC      PORTC, 3
0x01C9	0x29EB      	GOTO       L_main29
L__main72:
;SUMO.c,54 :: 		moveRight(Adc_value,Adc_value);
0x01CA	0x0823      	MOVF       _Adc_value, 0
0x01CB	0x00A9      	MOVWF      FARG_moveRight_speed1
0x01CC	0x0824      	MOVF       _Adc_value+1, 0
0x01CD	0x00AA      	MOVWF      FARG_moveRight_speed1+1
0x01CE	0x0823      	MOVF       _Adc_value, 0
0x01CF	0x00AB      	MOVWF      FARG_moveRight_speed2
0x01D0	0x0824      	MOVF       _Adc_value+1, 0
0x01D1	0x00AC      	MOVWF      FARG_moveRight_speed2+1
0x01D2	0x20C6      	CALL       _moveRight
;SUMO.c,55 :: 		Adc_value = ADC_Read_0();
0x01D3	0x2082      	CALL       _ADC_Read_0
0x01D4	0x0870      	MOVF       R0, 0
0x01D5	0x1283      	BCF        STATUS, 5
0x01D6	0x00A3      	MOVWF      _Adc_value
0x01D7	0x0871      	MOVF       R0+1, 0
0x01D8	0x00A4      	MOVWF      _Adc_value+1
;SUMO.c,56 :: 		ourDelay(10);
0x01D9	0x300A      	MOVLW      10
0x01DA	0x00AD      	MOVWF      FARG_ourDelay_microSeconds
0x01DB	0x3000      	MOVLW      0
0x01DC	0x00AE      	MOVWF      FARG_ourDelay_microSeconds+1
0x01DD	0x2059      	CALL       _ourDelay
;SUMO.c,57 :: 		if(Adc_value < 750) {Adc_value = 800;}
0x01DE	0x3002      	MOVLW      2
0x01DF	0x0224      	SUBWF      _Adc_value+1, 0
0x01E0	0x1D03      	BTFSS      STATUS, 2
0x01E1	0x29E4      	GOTO       L__main84
0x01E2	0x30EE      	MOVLW      238
0x01E3	0x0223      	SUBWF      _Adc_value, 0
L__main84:
0x01E4	0x1803      	BTFSC      STATUS, 0
0x01E5	0x29EA      	GOTO       L_main32
0x01E6	0x3020      	MOVLW      32
0x01E7	0x00A3      	MOVWF      _Adc_value
0x01E8	0x3003      	MOVLW      3
0x01E9	0x00A4      	MOVWF      _Adc_value+1
L_main32:
;SUMO.c,58 :: 		}
0x01EA	0x29BE      	GOTO       L_main28
L_main29:
;SUMO.c,59 :: 		}
0x01EB	0x292F      	GOTO       L_main5
L_main6:
;SUMO.c,61 :: 		while (!(PORTB & 0b00100000) && !(PORTB & 0b00010000) && !(PORTC & 0b00001000)){
L_main33:
0x01EC	0x1A86      	BTFSC      PORTB, 5
0x01ED	0x2A0F      	GOTO       L_main34
0x01EE	0x1A06      	BTFSC      PORTB, 4
0x01EF	0x2A0F      	GOTO       L_main34
0x01F0	0x1987      	BTFSC      PORTC, 3
0x01F1	0x2A0F      	GOTO       L_main34
L__main71:
;SUMO.c,62 :: 		moveBackward(900,900);
0x01F2	0x3084      	MOVLW      132
0x01F3	0x00A9      	MOVWF      FARG_moveBackward_speed1
0x01F4	0x3003      	MOVLW      3
0x01F5	0x00AA      	MOVWF      FARG_moveBackward_speed1+1
0x01F6	0x3084      	MOVLW      132
0x01F7	0x00AB      	MOVWF      FARG_moveBackward_speed2
0x01F8	0x3003      	MOVLW      3
0x01F9	0x00AC      	MOVWF      FARG_moveBackward_speed2+1
0x01FA	0x20B8      	CALL       _moveBackward
;SUMO.c,63 :: 		ourDelay(1000);
0x01FB	0x30E8      	MOVLW      232
0x01FC	0x00AD      	MOVWF      FARG_ourDelay_microSeconds
0x01FD	0x3003      	MOVLW      3
0x01FE	0x00AE      	MOVWF      FARG_ourDelay_microSeconds+1
0x01FF	0x2059      	CALL       _ourDelay
;SUMO.c,64 :: 		moveRight(900,900);
0x0200	0x3084      	MOVLW      132
0x0201	0x00A9      	MOVWF      FARG_moveRight_speed1
0x0202	0x3003      	MOVLW      3
0x0203	0x00AA      	MOVWF      FARG_moveRight_speed1+1
0x0204	0x3084      	MOVLW      132
0x0205	0x00AB      	MOVWF      FARG_moveRight_speed2
0x0206	0x3003      	MOVLW      3
0x0207	0x00AC      	MOVWF      FARG_moveRight_speed2+1
0x0208	0x20C6      	CALL       _moveRight
;SUMO.c,65 :: 		ourDelay(500);
0x0209	0x30F4      	MOVLW      244
0x020A	0x00AD      	MOVWF      FARG_ourDelay_microSeconds
0x020B	0x3001      	MOVLW      1
0x020C	0x00AE      	MOVWF      FARG_ourDelay_microSeconds+1
0x020D	0x2059      	CALL       _ourDelay
;SUMO.c,66 :: 		}
0x020E	0x29EC      	GOTO       L_main33
L_main34:
;SUMO.c,68 :: 		while (!(PORTB & 0b00100000) && (PORTB & 0b00010000) && !(PORTC & 0b00001000)){
L_main37:
0x020F	0x1A86      	BTFSC      PORTB, 5
0x0210	0x2A24      	GOTO       L_main38
0x0211	0x1E06      	BTFSS      PORTB, 4
0x0212	0x2A24      	GOTO       L_main38
0x0213	0x1987      	BTFSC      PORTC, 3
0x0214	0x2A24      	GOTO       L_main38
L__main70:
;SUMO.c,69 :: 		moveRight(900,900);
0x0215	0x3084      	MOVLW      132
0x0216	0x00A9      	MOVWF      FARG_moveRight_speed1
0x0217	0x3003      	MOVLW      3
0x0218	0x00AA      	MOVWF      FARG_moveRight_speed1+1
0x0219	0x3084      	MOVLW      132
0x021A	0x00AB      	MOVWF      FARG_moveRight_speed2
0x021B	0x3003      	MOVLW      3
0x021C	0x00AC      	MOVWF      FARG_moveRight_speed2+1
0x021D	0x20C6      	CALL       _moveRight
;SUMO.c,70 :: 		ourDelay(500);
0x021E	0x30F4      	MOVLW      244
0x021F	0x00AD      	MOVWF      FARG_ourDelay_microSeconds
0x0220	0x3001      	MOVLW      1
0x0221	0x00AE      	MOVWF      FARG_ourDelay_microSeconds+1
0x0222	0x2059      	CALL       _ourDelay
;SUMO.c,71 :: 		}
0x0223	0x2A0F      	GOTO       L_main37
L_main38:
;SUMO.c,73 :: 		while ((PORTB & 0b00100000) && !(PORTB & 0b00010000) && !(PORTC & 0b00001000)){
L_main41:
0x0224	0x1E86      	BTFSS      PORTB, 5
0x0225	0x2A39      	GOTO       L_main42
0x0226	0x1A06      	BTFSC      PORTB, 4
0x0227	0x2A39      	GOTO       L_main42
0x0228	0x1987      	BTFSC      PORTC, 3
0x0229	0x2A39      	GOTO       L_main42
L__main69:
;SUMO.c,74 :: 		moveLeft(900,900);
0x022A	0x3084      	MOVLW      132
0x022B	0x00A9      	MOVWF      FARG_moveLeft_speed1
0x022C	0x3003      	MOVLW      3
0x022D	0x00AA      	MOVWF      FARG_moveLeft_speed1+1
0x022E	0x3084      	MOVLW      132
0x022F	0x00AB      	MOVWF      FARG_moveLeft_speed2
0x0230	0x3003      	MOVLW      3
0x0231	0x00AC      	MOVWF      FARG_moveLeft_speed2+1
0x0232	0x20E4      	CALL       _moveLeft
;SUMO.c,75 :: 		ourDelay(500);
0x0233	0x30F4      	MOVLW      244
0x0234	0x00AD      	MOVWF      FARG_ourDelay_microSeconds
0x0235	0x3001      	MOVLW      1
0x0236	0x00AE      	MOVWF      FARG_ourDelay_microSeconds+1
0x0237	0x2059      	CALL       _ourDelay
;SUMO.c,76 :: 		}
0x0238	0x2A24      	GOTO       L_main41
L_main42:
;SUMO.c,77 :: 		}
0x0239	0x292D      	GOTO       L_main3
L_main4:
;SUMO.c,78 :: 		Park();
0x023A	0x20DB      	CALL       _Park
;SUMO.c,79 :: 		while ((PORTC & 0b00001000)) {
L_main45:
0x023B	0x1D87      	BTFSS      PORTC, 3
0x023C	0x2AD8      	GOTO       L_main46
;SUMO.c,80 :: 		if (UART1_Data_Ready()) {
0x023D	0x20D4      	CALL       _UART1_Data_Ready
0x023E	0x0870      	MOVF       R0, 0
0x023F	0x1903      	BTFSC      STATUS, 2
0x0240	0x2AD7      	GOTO       L_main47
;SUMO.c,81 :: 		received_data = UART1_Read();
0x0241	0x20F2      	CALL       _UART1_Read
0x0242	0x0870      	MOVF       R0, 0
0x0243	0x00A2      	MOVWF      _received_data
;SUMO.c,83 :: 		switch (received_data) {
0x0244	0x2A9E      	GOTO       L_main48
;SUMO.c,84 :: 		case 'F':
L_main50:
;SUMO.c,85 :: 		moveForward(bluetoothSpeed,bluetoothSpeed);
0x0245	0x0820      	MOVF       _bluetoothSpeed, 0
0x0246	0x00A9      	MOVWF      FARG_moveForward_speed1
0x0247	0x0821      	MOVF       _bluetoothSpeed+1, 0
0x0248	0x00AA      	MOVWF      FARG_moveForward_speed1+1
0x0249	0x0820      	MOVF       _bluetoothSpeed, 0
0x024A	0x00AB      	MOVWF      FARG_moveForward_speed2
0x024B	0x0821      	MOVF       _bluetoothSpeed+1, 0
0x024C	0x00AC      	MOVWF      FARG_moveForward_speed2+1
0x024D	0x20AA      	CALL       _moveForward
;SUMO.c,86 :: 		break;
0x024E	0x2AD7      	GOTO       L_main49
;SUMO.c,87 :: 		case 'B':
L_main51:
;SUMO.c,88 :: 		moveBackward(bluetoothSpeed,bluetoothSpeed);
0x024F	0x0820      	MOVF       _bluetoothSpeed, 0
0x0250	0x00A9      	MOVWF      FARG_moveBackward_speed1
0x0251	0x0821      	MOVF       _bluetoothSpeed+1, 0
0x0252	0x00AA      	MOVWF      FARG_moveBackward_speed1+1
0x0253	0x0820      	MOVF       _bluetoothSpeed, 0
0x0254	0x00AB      	MOVWF      FARG_moveBackward_speed2
0x0255	0x0821      	MOVF       _bluetoothSpeed+1, 0
0x0256	0x00AC      	MOVWF      FARG_moveBackward_speed2+1
0x0257	0x20B8      	CALL       _moveBackward
;SUMO.c,89 :: 		break;
0x0258	0x2AD7      	GOTO       L_main49
;SUMO.c,90 :: 		case 'R':
L_main52:
;SUMO.c,91 :: 		moveRight(bluetoothSpeed,bluetoothSpeed);
0x0259	0x0820      	MOVF       _bluetoothSpeed, 0
0x025A	0x00A9      	MOVWF      FARG_moveRight_speed1
0x025B	0x0821      	MOVF       _bluetoothSpeed+1, 0
0x025C	0x00AA      	MOVWF      FARG_moveRight_speed1+1
0x025D	0x0820      	MOVF       _bluetoothSpeed, 0
0x025E	0x00AB      	MOVWF      FARG_moveRight_speed2
0x025F	0x0821      	MOVF       _bluetoothSpeed+1, 0
0x0260	0x00AC      	MOVWF      FARG_moveRight_speed2+1
0x0261	0x20C6      	CALL       _moveRight
;SUMO.c,92 :: 		break;
0x0262	0x2AD7      	GOTO       L_main49
;SUMO.c,93 :: 		case 'L':
L_main53:
;SUMO.c,94 :: 		moveLeft(bluetoothSpeed,bluetoothSpeed);
0x0263	0x0820      	MOVF       _bluetoothSpeed, 0
0x0264	0x00A9      	MOVWF      FARG_moveLeft_speed1
0x0265	0x0821      	MOVF       _bluetoothSpeed+1, 0
0x0266	0x00AA      	MOVWF      FARG_moveLeft_speed1+1
0x0267	0x0820      	MOVF       _bluetoothSpeed, 0
0x0268	0x00AB      	MOVWF      FARG_moveLeft_speed2
0x0269	0x0821      	MOVF       _bluetoothSpeed+1, 0
0x026A	0x00AC      	MOVWF      FARG_moveLeft_speed2+1
0x026B	0x20E4      	CALL       _moveLeft
;SUMO.c,95 :: 		break;
0x026C	0x2AD7      	GOTO       L_main49
;SUMO.c,96 :: 		case 'S':
L_main54:
;SUMO.c,97 :: 		Park();
0x026D	0x20DB      	CALL       _Park
;SUMO.c,98 :: 		break;
0x026E	0x2AD7      	GOTO       L_main49
;SUMO.c,99 :: 		case '1':
L_main55:
;SUMO.c,100 :: 		bluetoothSpeed = 600;
0x026F	0x3058      	MOVLW      88
0x0270	0x00A0      	MOVWF      _bluetoothSpeed
0x0271	0x3002      	MOVLW      2
0x0272	0x00A1      	MOVWF      _bluetoothSpeed+1
;SUMO.c,101 :: 		break;
0x0273	0x2AD7      	GOTO       L_main49
;SUMO.c,102 :: 		case '2':
L_main56:
;SUMO.c,103 :: 		bluetoothSpeed = 650;
0x0274	0x308A      	MOVLW      138
0x0275	0x00A0      	MOVWF      _bluetoothSpeed
0x0276	0x3002      	MOVLW      2
0x0277	0x00A1      	MOVWF      _bluetoothSpeed+1
;SUMO.c,104 :: 		break;
0x0278	0x2AD7      	GOTO       L_main49
;SUMO.c,105 :: 		case '3':
L_main57:
;SUMO.c,106 :: 		bluetoothSpeed = 700;
0x0279	0x30BC      	MOVLW      188
0x027A	0x00A0      	MOVWF      _bluetoothSpeed
0x027B	0x3002      	MOVLW      2
0x027C	0x00A1      	MOVWF      _bluetoothSpeed+1
;SUMO.c,107 :: 		break;
0x027D	0x2AD7      	GOTO       L_main49
;SUMO.c,108 :: 		case '4':
L_main58:
;SUMO.c,109 :: 		bluetoothSpeed = 750;
0x027E	0x30EE      	MOVLW      238
0x027F	0x00A0      	MOVWF      _bluetoothSpeed
0x0280	0x3002      	MOVLW      2
0x0281	0x00A1      	MOVWF      _bluetoothSpeed+1
;SUMO.c,110 :: 		break;
0x0282	0x2AD7      	GOTO       L_main49
;SUMO.c,111 :: 		case '5':
L_main59:
;SUMO.c,112 :: 		bluetoothSpeed = 800;
0x0283	0x3020      	MOVLW      32
0x0284	0x00A0      	MOVWF      _bluetoothSpeed
0x0285	0x3003      	MOVLW      3
0x0286	0x00A1      	MOVWF      _bluetoothSpeed+1
;SUMO.c,113 :: 		break;
0x0287	0x2AD7      	GOTO       L_main49
;SUMO.c,114 :: 		case '6':
L_main60:
;SUMO.c,115 :: 		bluetoothSpeed = 850;
0x0288	0x3052      	MOVLW      82
0x0289	0x00A0      	MOVWF      _bluetoothSpeed
0x028A	0x3003      	MOVLW      3
0x028B	0x00A1      	MOVWF      _bluetoothSpeed+1
;SUMO.c,116 :: 		break;
0x028C	0x2AD7      	GOTO       L_main49
;SUMO.c,117 :: 		case '7':
L_main61:
;SUMO.c,118 :: 		bluetoothSpeed = 900;
0x028D	0x3084      	MOVLW      132
0x028E	0x00A0      	MOVWF      _bluetoothSpeed
0x028F	0x3003      	MOVLW      3
0x0290	0x00A1      	MOVWF      _bluetoothSpeed+1
;SUMO.c,119 :: 		break;
0x0291	0x2AD7      	GOTO       L_main49
;SUMO.c,120 :: 		case '8':
L_main62:
;SUMO.c,121 :: 		bluetoothSpeed = 950;
0x0292	0x30B6      	MOVLW      182
0x0293	0x00A0      	MOVWF      _bluetoothSpeed
0x0294	0x3003      	MOVLW      3
0x0295	0x00A1      	MOVWF      _bluetoothSpeed+1
;SUMO.c,122 :: 		break;
0x0296	0x2AD7      	GOTO       L_main49
;SUMO.c,123 :: 		case '9':
L_main63:
;SUMO.c,124 :: 		bluetoothSpeed = 1000;
0x0297	0x30E8      	MOVLW      232
0x0298	0x00A0      	MOVWF      _bluetoothSpeed
0x0299	0x3003      	MOVLW      3
0x029A	0x00A1      	MOVWF      _bluetoothSpeed+1
;SUMO.c,125 :: 		break;
0x029B	0x2AD7      	GOTO       L_main49
;SUMO.c,126 :: 		default:
L_main64:
;SUMO.c,127 :: 		Park();
0x029C	0x20DB      	CALL       _Park
;SUMO.c,128 :: 		break;
0x029D	0x2AD7      	GOTO       L_main49
;SUMO.c,129 :: 		}
L_main48:
0x029E	0x0822      	MOVF       _received_data, 0
0x029F	0x3A46      	XORLW      70
0x02A0	0x1903      	BTFSC      STATUS, 2
0x02A1	0x2A45      	GOTO       L_main50
0x02A2	0x0822      	MOVF       _received_data, 0
0x02A3	0x3A42      	XORLW      66
0x02A4	0x1903      	BTFSC      STATUS, 2
0x02A5	0x2A4F      	GOTO       L_main51
0x02A6	0x0822      	MOVF       _received_data, 0
0x02A7	0x3A52      	XORLW      82
0x02A8	0x1903      	BTFSC      STATUS, 2
0x02A9	0x2A59      	GOTO       L_main52
0x02AA	0x0822      	MOVF       _received_data, 0
0x02AB	0x3A4C      	XORLW      76
0x02AC	0x1903      	BTFSC      STATUS, 2
0x02AD	0x2A63      	GOTO       L_main53
0x02AE	0x0822      	MOVF       _received_data, 0
0x02AF	0x3A53      	XORLW      83
0x02B0	0x1903      	BTFSC      STATUS, 2
0x02B1	0x2A6D      	GOTO       L_main54
0x02B2	0x0822      	MOVF       _received_data, 0
0x02B3	0x3A31      	XORLW      49
0x02B4	0x1903      	BTFSC      STATUS, 2
0x02B5	0x2A6F      	GOTO       L_main55
0x02B6	0x0822      	MOVF       _received_data, 0
0x02B7	0x3A32      	XORLW      50
0x02B8	0x1903      	BTFSC      STATUS, 2
0x02B9	0x2A74      	GOTO       L_main56
0x02BA	0x0822      	MOVF       _received_data, 0
0x02BB	0x3A33      	XORLW      51
0x02BC	0x1903      	BTFSC      STATUS, 2
0x02BD	0x2A79      	GOTO       L_main57
0x02BE	0x0822      	MOVF       _received_data, 0
0x02BF	0x3A34      	XORLW      52
0x02C0	0x1903      	BTFSC      STATUS, 2
0x02C1	0x2A7E      	GOTO       L_main58
0x02C2	0x0822      	MOVF       _received_data, 0
0x02C3	0x3A35      	XORLW      53
0x02C4	0x1903      	BTFSC      STATUS, 2
0x02C5	0x2A83      	GOTO       L_main59
0x02C6	0x0822      	MOVF       _received_data, 0
0x02C7	0x3A36      	XORLW      54
0x02C8	0x1903      	BTFSC      STATUS, 2
0x02C9	0x2A88      	GOTO       L_main60
0x02CA	0x0822      	MOVF       _received_data, 0
0x02CB	0x3A37      	XORLW      55
0x02CC	0x1903      	BTFSC      STATUS, 2
0x02CD	0x2A8D      	GOTO       L_main61
0x02CE	0x0822      	MOVF       _received_data, 0
0x02CF	0x3A38      	XORLW      56
0x02D0	0x1903      	BTFSC      STATUS, 2
0x02D1	0x2A92      	GOTO       L_main62
0x02D2	0x0822      	MOVF       _received_data, 0
0x02D3	0x3A39      	XORLW      57
0x02D4	0x1903      	BTFSC      STATUS, 2
0x02D5	0x2A97      	GOTO       L_main63
0x02D6	0x2A9C      	GOTO       L_main64
L_main49:
;SUMO.c,130 :: 		}
L_main47:
;SUMO.c,131 :: 		}
0x02D7	0x2A3B      	GOTO       L_main45
L_main46:
;SUMO.c,132 :: 		}
0x02D8	0x292D      	GOTO       L_main1
;SUMO.c,133 :: 		}
L_end_main:
0x02D9	0x2AD9      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003      [63]    _PWM_Duty
0x0042       [7]    _____DoICP
0x0049      [16]    _UART1_Init
0x0059      [17]    _ourDelay
0x006A      [12]    ___CC2DW
0x0076      [12]    _Bluetooth_Init
0x0082      [17]    _ADC_Read_0
0x0093       [8]    _ADC_Init
0x009B      [15]    _PWM_Init
0x00AA      [14]    _moveForward
0x00B8      [14]    _moveBackward
0x00C6      [14]    _moveRight
0x00D4       [7]    _UART1_Data_Ready
0x00DB       [9]    _Park
0x00E4      [14]    _moveLeft
0x00F2      [11]    _UART1_Read
0x00FD     [477]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [1]    PORTB
0x0007       [1]    PORTC
0x0008       [1]    PORTD
0x000A       [1]    PCLATH
0x000C       [1]    PIR1
0x0011       [1]    TMR2
0x0012       [1]    T2CON
0x0015       [1]    CCPR1L
0x0017       [1]    CCP1CON
0x0018       [1]    RCSTA
0x001A       [1]    RCREG
0x001B       [1]    CCPR2L
0x001D       [1]    CCP2CON
0x001E       [1]    ADRESH
0x001F       [1]    ADCON0
0x0020       [2]    _bluetoothSpeed
0x0022       [1]    _received_data
0x0023       [2]    _Adc_value
0x0025       [2]    _counter
0x0027       [2]    ___DoICPAddr
0x0029       [4]    FARG_Bluetooth_Init_baud_rate
0x0029       [2]    FARG_moveLeft_speed1
0x0029       [2]    FARG_moveForward_speed1
0x0029       [2]    FARG_moveBackward_speed1
0x0029       [2]    FARG_moveRight_speed1
0x002B       [2]    FARG_moveRight_speed2
0x002B       [2]    FARG_moveBackward_speed2
0x002B       [2]    FARG_moveForward_speed2
0x002B       [2]    FARG_moveLeft_speed2
0x002D       [2]    FARG_PWM_Duty_duty1
0x002D       [2]    FARG_ourDelay_microSeconds
0x002F       [2]    FARG_PWM_Duty_duty2
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0085       [1]    TRISA
0x0086       [1]    TRISB
0x0087       [0]    TRISC7_bit
0x0087       [0]    TRISC6_bit
0x0087       [1]    TRISC
0x0088       [1]    TRISD
0x0092       [1]    PR2
0x0098       [1]    TXSTA
0x0099       [1]    SPBRG
0x009E       [1]    ADRESL
0x009F       [1]    ADCON1
